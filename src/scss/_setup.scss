@use "sass:map";
@import "mixins";

/*
 * Default grid values
 */
$container-max-width: 1680px;
$container-base: 100%;
$columns-amount: 24;
$grid-driver: 'flex';
$base-gutter: 0;
$container-widths: ();
$gutter-widths: ();

$breakpoints: (
        landscape: 'only screen and (orientation:landscape)',
        portrait : 'only screen and (orientation:portrait)',
        retina : 'only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 144dpi)',
);


/**
 * Register a new breakpoint with optional gutter and vertical space values for the container
 * @param 		{String} 		$name 		     The new breakpoint name
 * @param 		{Pixel} 		$pixels 	     The pixel value for the breakpoint
 * @param       {Pixel}         $gutter          Optional gutter width for the container
 * @param       {Pixel}         $vertical-space  Optional vertical space (left and right) for the container
 * @example 	scss
 * \@include register-breakpoint(small, 600px);
 *
 */
@mixin register-breakpoint($name, $pixels, $gutter : 0px, $vertical-space : 0px) {
  $breakpoints: map.merge($breakpoints, ($name : 'only screen and (min-width: #{$pixels})')) !global;
  $gutter-widths: map.merge($gutter-widths, ($name : $gutter)) !global;
  $container-widths: map.merge($container-widths, ($name : calc(100% - #{$vertical-space * 2}))) !global;
}

@mixin register-container-base($width, $gutter : 0px, $vertical-space : 0px) {
  $container-base: calc(100% - #{$vertical-space * 2}) !global;
  $base-gutter: $gutter !global;
}

@mixin register-container-max($width) {
  $container-max-width: $width !global;
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.';
  }
}


@mixin create-grid() {
  // Grid setup mixins
  @include create-container();
  @include create-row();
  @include create-grid-base();
  @include create-grid-states();
  @include create-prefixes();

  // Helper classes
  @include create-order();
  @include create-show-and-hide();
}







